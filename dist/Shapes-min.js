"use strict";function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _get=function e(t,r,n){null===t&&(t=Function.prototype);var o=Object.getOwnPropertyDescriptor(t,r);if(void 0===o){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,r,n)}if("value"in o)return o.value;var a=o.get;if(void 0!==a)return a.call(n)},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),width,height,pi=3.14,AbstractShape=function(){function e(t,r){if(_classCallCheck(this,e),console.log("The caller constructor is "+this.constructor.name),this.width=t,this.height=r,this.constructor===e)throw new TypeError("Can not construct abstract class.")}return _createClass(e,[{key:"getWidth",value:function(){return this.width}},{key:"getLength",value:function(){return this.height}},{key:"getCenter",value:function(){throw new TypeError("Do not call abstract method getCenter from child.")}},{key:"getArea",value:function(){return this.getLength()*this.getWidth()}},{key:"getPerimeter",value:function(){throw new TypeError("Do not call abstract method getPerimeter from child.")}}]),e}(),Triangle=function(e){function t(e,r){return _classCallCheck(this,t),_possibleConstructorReturn(this,Object.getPrototypeOf(t).call(this,e,r))}return _inherits(t,e),_createClass(t,[{key:"getArea",value:function(){return _get(Object.getPrototypeOf(t.prototype),"getArea",this).call(this)/2}}]),t}(AbstractShape),Reactangle=function(e){function t(e,r){return _classCallCheck(this,t),_possibleConstructorReturn(this,Object.getPrototypeOf(t).call(this,e,r))}return _inherits(t,e),_createClass(t,[{key:"getPerimeter",value:function(){return 2*(this.getWidth()+this.getLength())}}]),t}(AbstractShape),Square=function(e){function t(e){return _classCallCheck(this,t),_possibleConstructorReturn(this,Object.getPrototypeOf(t).call(this,e,e))}return _inherits(t,e),_createClass(t,[{key:"getPerimeter",value:function(){return 4*this.getLength()}}]),t}(AbstractShape),Circle=function(e){function t(e){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,Object.getPrototypeOf(t).call(this,e,e));return r.radius=e,r}return _inherits(t,e),_createClass(t,[{key:"getArea",value:function(){var e=_get(Object.getPrototypeOf(t.prototype),"getArea",this).call(this);return pi*e}},{key:"getPerimeter",value:function(){return 2*pi*this.getWidth()}}]),t}(AbstractShape),triangle=new Triangle(3,4);console.log("Triangle area = "+triangle.getArea());var rectangle=new Reactangle(3,4);console.log("Reactangle area = "+rectangle.getArea()),console.log("Reactangle perimeter = "+rectangle.getPerimeter());var square=new Square(4);console.log("Square area = "+square.getArea()),console.log("Square perimeter = "+square.getPerimeter());var circle=new Circle(4);console.log("Circle area = "+circle.getArea()),console.log("Circle perimeter = "+circle.getPerimeter());